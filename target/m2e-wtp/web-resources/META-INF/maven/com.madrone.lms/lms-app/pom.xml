<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	
	<groupId>com.madrone.lms</groupId>
	<artifactId>lms-app</artifactId>
	<packaging>war</packaging>
	<version>1.0</version>
	<name>lms-app</name>
	<url>http://maven.apache.org</url>
	
	<properties>
        <org.springframework.version>3.2.3.RELEASE</org.springframework.version>
        <jdk.version>1.7</jdk.version>
        <jackson.version>1.9.10</jackson.version>
    </properties>
	  
	<dependencies>
		<!-- Refer: http://search.maven.org/ -->
	
		<!-- JUnit testing framework -->
		<dependency>
		    <groupId>junit</groupId>
		    <artifactId>junit</artifactId>
		    <version>4.11</version>
		    <scope>test</scope>
		</dependency>	
		
		<!-- Spring framework -->
		<!--
    		Web application development utilities applicable to both Servlet 
    		and Portlet Environments (depends on spring-core, spring-beans, 
    		spring-context). Define this if you use Spring MVC, or wish to use 
    		Struts, JSF, or another web framework with Spring 
    		(org.springframework.web.*)
		-->
		<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
        <!--
    		Spring MVC for Servlet Environments (depends on spring-core, 
    		spring-beans, spring-context, spring-web). Define this if you use 
    		Spring MVC with a Servlet Container such as Apache Tomcat 
    		(org.springframework.web.servlet.*)
    	-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
        <!--
    		Application Context (depends on spring-core, spring-expression, 
    		spring-aop, spring-beans). This is the central artifact for 
    		Spring's Dependency Injection Container and is generally always 
    		defined
		-->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
		
		<!--
    		Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
    		and iBatis. (depends on spring-core, spring-beans, spring-context, 
    		spring-tx). Define this if you need ORM (org.springframework.orm.*)
		-->			
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
        <!--
    		Various Application Context utilities, including EhCache, JavaMail, 
    		Quartz, and Freemarker integration. Define this if you need any of 
    		these integrations
		-->
		<dependency>
		  <groupId>org.springframework</groupId>
		  <artifactId>spring-context-support</artifactId>
		  <version>${org.springframework.version}</version>
		</dependency>
        
        <!--
    		Support for testing Spring applications with tools such as JUnit 
    		and TestNG. This artifact is generally always defined with a 'test' 
    		scope for the integration testing framework and unit testing stubs
		-->       	
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
        <!--
    		JDBC Data Access Library (depends on spring-core, spring-beans, 
    		spring-context, spring-tx). Define this if you use Spring's 
    		JdbcTemplate API (org.springframework.jdbc.*)
		-->        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework.version}</version>
        </dependency>
        
        <!-- Hibernate framework -->
        <dependency>
    		<groupId>org.hibernate</groupId>
    		<artifactId>hibernate-tools</artifactId>
    		<version>4.0.0-CR1</version>
		</dependency>
		
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-c3p0</artifactId>
			<version>4.0.0.CR1</version>
		</dependency>
 
        <!-- Postgres database driver -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>9.1-901.jdbc4</version>
		</dependency>
		
		<!-- JSTL -->
		<dependency>
			<groupId>jstl</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- Logging using logback -->
		<!--  Reasons to use logback over log4j: http://logback.qos.ch/reasonsToSwitch.html -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.0.13</version>
		</dependency>
		
		<dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.6</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.6.6</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-extras</artifactId>
			<version>3.0.0</version>
	   </dependency>
	   
	   <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
       </dependency>
       
       <!-- Java Mail API -->
	    <dependency>
		    <groupId>javax.mail</groupId>
		    <artifactId>mail</artifactId>
		    <version>1.4.3</version>
	    </dependency>
		
	</dependencies>

	<build>
	  <plugins>
	  
	  	<!--  Maven plugin to create war -->
	  	<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-war-plugin</artifactId>
			<version>2.4</version>
			<configuration>
				<webResources>
					<resource>
						<directory>${basedir}/src/main/java</directory>
						<targetPath>WEB-INF/classes</targetPath>
						<includes>
							<include>**/*.properties</include>
							<include>**/*.xml</include>
							<include>**/*.css</include>
							<include>**/*.html</include>
						</includes>
					</resource>
				</webResources>
			</configuration>
		</plugin>
	  
		<plugin>
			<artifactId>maven-compiler-plugin</artifactId>
			<version>3.0</version>
			<configuration>
				<source>${jdk.version}</source>
				<target>${jdk.version}</target>
			</configuration>
		</plugin>
	  </plugins>
	</build>
	
</project>